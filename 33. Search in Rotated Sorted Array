class Solution {
    public int search(int[] nums, int target) {
        if (nums == null || nums.length == 0) {
            return -1;
        }
        int left = 0;
        int right = nums.length - 1;
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (nums[mid] == target) {
                return mid;
            }
            if (nums[left] < nums[right]) {
                if (nums[mid] < target) {
                    left = mid + 1;
                } else {
                    right = mid - 1;
                }
            } else {
                if (target >= nums[left]) {
                    // 找左边递增块
                    if (nums[mid] < nums[left]) {
                        right = mid - 1;
                    } else {
                        right--;
                    }
                } else if (target <= nums[right]) {
                    // 找右边递增块
                    if (nums[mid] > nums[right]) {
                        left = mid + 1;
                    } else {
                        left++;
                    }
                } else {
                    return -1;
                }
            }
        }
        return nums[left] == target ? left : -1;
    }
}