class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] res = {-1, -1};
        if (nums == null || nums.length == 0) {
            return res;
        }
        int left = 0, right = nums.length - 1;
        // find first occurrence
        while (left < right) {
            int mid = left + (right - left) / 2;
            // find 1st occurrence
            if (nums[mid] == target) {
                right = mid;
            } else if (nums[mid] > target) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        // return if there is no such element, don't need to run the second bs
        if (nums[left] != target) {
            return res;
        } else {
            res[0] = left;
            right = nums.length - 1;
        }
        // find second occurrence
        while (left < right) {
            int mid = left + (right - left) / 2 + 1;
            if (nums[mid] == target) {
                left = mid;
            } else if (nums[mid] > target) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        res[1] = left;
        return res;
    }
}///s