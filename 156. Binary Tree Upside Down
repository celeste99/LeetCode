class Solution {
    public TreeNode upsideDownBinaryTree(TreeNode root) {
        if (root == null || root.left == null) {
            return root;
        }
        
        TreeNode newRoot = upsideDownBinaryTree(root.left);
        
        root.left.right = root;
        root.left.left = root.right;
        root.left = null;
        root.right = null;
        
        return newRoot;
    }
}


class Solution {
    public TreeNode upsideDownBinaryTree(TreeNode root) {
        TreeNode prev = null, right = null;
        
        while (root != null) {
            TreeNode next = root.left; // store info for next step
                        
            root.left = right; // 1. update left
            right = root.right; // store info for next step
            
            root.right = prev; // 2. update right
            
            prev = root;
            root = next;            
        }        
        return prev;
    }
}
//