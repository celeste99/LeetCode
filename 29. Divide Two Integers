class Solution {
    public int divide(int a, int b) {
        // 1. overflow
        if (a == Integer.MIN_VALUE && b == -1) {
            return Integer.MAX_VALUE;
        }
        // 2. calculate division of 2 positive number
        long x = a < 0 ? -(long)a : (long)a;
        long y = b < 0 ? -(long)b : (long)b;
        int res = recurse(x, y, 1);
        // 3. consider sign
        if (a < 0 && b < 0) {
            return res;
        }
        if (a < 0 || b < 0) {
           return -res; 
        }
        return res;
    }

    public int recurse(long x, long y, int count) {
        if (x == 0 || count == 0) {
           return 0; 
        }
        if (y > x) {
           return recurse(x, y >> 1, count >>> 1); // overshot, so divide and try again. 
        } else {
            return recurse(x - y, y + y, count + count) + count;
        }
    }
}
/////////////