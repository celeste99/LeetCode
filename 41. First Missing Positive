class Solution {
    public int firstMissingPositive(int[] nums) {
        // put all the elements to its right position nums[i] = i + 1
        // skip the rest, we don't care what is put in i, we just care wether nums[i] == i + 1
        int i = 0, n = nums.length;
        while (i < n) {
            if (nums[i] == i + 1 || nums[i] <= 0 || nums[i] > n 
                                             || nums[nums[i] - 1] == nums[i]) {
                i++;
            } else {
                swap(nums, i, nums[i] - 1);
            }
        }
        
        for (int j = 0; j < n; j++) {
            if (nums[j] != j + 1) {
                return j + 1;
            }
        }
        return n + 1;
    }
    
    private void swap(int[] a, int i, int j) {
        int tmp = a[i];
        a[i] = a[j];
        a[j] = tmp;
    }
}