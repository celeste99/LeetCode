/*
solution 1
for any i < j, to find
preSum[j] - preSum[i] == k
O(n^2)time; O(n) space

Solution 2
use a hashSet to store all the prefix sum, time can be reduced to O(n)

*/
class Solution {
    public int subarraySum(int[] nums, int k) {
        Map<Integer, Integer> map = new HashMap<>();
        int count = 0, sum = 0;
        map.put(0, 1);
        for (int i = 0; i < nums.length; i++) {
            sum += nums[i];            
            if (map.containsKey(sum - k)) {
                count += map.get(sum - k);
            }
            map.put(sum, map.getOrDefault(sum, 0) + 1); // must put after checking coz k can be 0
        }
        return count;
    }
}